
@using System.Web.Helpers

 @model IEnumerable<Gmou.DomainModelEntities.WayBillEditModel>

<div id="ajaxgrid">

    @{
        var grid = new System.Web.Helpers.WebGrid(Model, ajaxUpdateContainerId: "ajaxgrid");

        IEnumerable<WebGridColumn> cols =
            new List<WebGridColumn> {
            new WebGridColumn{
                Format = @<text>
    <a href='#' class="display edit-btn">Edit</a>
    <a href="#" class="edit save-btn">Save</a>
    <a href="#" class="edit cancel-btn">Close</a>
    <a href="#" class="display delete-btn">Delete</a>
                </text>


                        },
                                new WebGridColumn{
                                    Header="Bus Number",
                                    Format = @<text>
                    <span class="display"><label id="lblID">@item.BusNumber</label></span>

                    <input type="text" id="inbudid" value="@item.BusNumber" class="edit" readonly="true" />

                                    </text>
                                                    },
                                                    new WebGridColumn{
                                                        Header="ID",
                                                        Format = @<text>
                                        <span class="display"><label id="lblID">@item.ViviraniSerial</label></span>
                                        <input type="text" id="inserialID" value="@item.ViviraniSerial" class="edit" readonly="true" />
                                                        </text>
                                                                        },
                                                                        new WebGridColumn{
                                                                            Header="Vivrani Number",
                                                                            Format = @<text>
                                                            <span class="display"><label id="lblcashvivrani">@item.Cash_Vivrani</label></span>
                                                            <input type="text" id="inCashVivrani" value="@item.Cash_Vivrani" class="edit" />
                                                                            </text>
                                                                                            },
                                                                                            new WebGridColumn{
                                                                                                Header="Amount",
                                                                                                Format = @<text>
                                                                                <span class="display"><label id="lblamount">@item.Amount</label></span>
                                                                                <input type="text" id="inAmount" value="@item.Amount" class="edit" />
                                                                                                </text>

                                                                                                                },
                                                                                                             new WebGridColumn{
                                                                                                                    Header="WayBill Number",
                                                                                                                    Format = @<text>
                                                                                                    <span class="display"><label id="lblwaybillno">@item.WayBillNo</label></span>
                                                                                                    <input type="text" id="inWayBillNumber" value="@item.WayBillNo" class="edit" />
                                                                                                                    </text>

                                                                                                                                    },  new WebGridColumn{
                                                                                                                                        Header="Round Off",
                                                                                                                                        Format = @<text>
                                                                                                                        <span class="display"><label id="lblroundoff">@item.RoundOff</label></span>
                                                                                                                        <input type="text" id="inRoundOff" value="@item.RoundOff" class="edit" />
                                                                                                                                        </text>

                                                                                                                                                        }
                                                                                                                                                        };
    }
</div>

@grid.GetHtml(columns: cols, rowStyle: "oddRowStyle", alternatingRowStyle: "evenRowStyle")

<script type="text/javascript">
    $(function () {

        var tfootAdd = "<tr class='tfootrow'>" +
                            "<td> " +
                                "<a href='#' class='display ins-btn' >Insert</a>" +
                                "<a href='#' class='edit inssave-btn'>Save</a>" +
                                "<a href='#' class='edit cancel-btn'>Close</a>" +
                            "</td>" +
                            "<td>" +
                                "<span class='display'/>" +
                                "<input type='text' id='inserialID' value='' class = 'edit'/> " +
                                "</td>" +
                            "<td>" +
                                "<span class='display'/>" +
                                "<input type='text' id='inCashVivrani' value='' class = 'edit'/>" +
                            "</td>" +
                            "<td>" +
                                "<span class='display'/>" +
                                "<input type='text' id='inAmount' value='' class = 'edit'/>" +
                            "</td>" +
                        "</tr>"
        $("table tfoot tr:first").before(tfootAdd);

        $('.edit').hide();  // default is display

        $('.ins-btn, .edit-btn, .cancel-btn').on("click", function () {
            var tr = $(this).parents('tr:first');
            tr.find('.edit, .display').toggle();
        });

        $('.inssave-btn').on("click", function () {
            var tr = $(this).parents('tr:first');
            var name = tr.find("#inName").val();
            var id = tr.find("#inID").val();
            var email = tr.find("#inEmail").val();
            var isSuccess = -1;

            var Student =
            {
                "ID": id,
                "Name": name,
                "email": email
            };

            $.ajax({

                url: '/Home/InsertData/',       // HomeController and InsertData method

                data: JSON.stringify(Student),

                type: 'POST',

                contentType: 'application/json; charset=utf-8',

                success: function (result) {
                    isSuccess = result;
                    debugger;

                },
                error: function(result){
                    isSuccess = result;
                }

            }).done(function () {
                if (isSuccess == "1") {           // Successfully saved
                    tr.find('.edit, .display').toggle();
                    alert("Successfully Saved");
                    location.reload();      // refresh the page
                }
                else {                      // Data Error
                    alert("Error. Please, check the data");
                }
            });
        });

        $('.save-btn').on("click", function () {
            debugger;
            var tr = $(this).parents('tr:first');
            var amount = tr.find("#inAmount").val();
            var id = tr.find("#inserialID").val();
            var roundoff = tr.find("#inRoundOff").val();
            var cashvivrani = tr.find('#inCashVivrani').val();
            var isSuccess = -1;

            tr.find("#lblamount").text(amount);
            tr.find("#lblroundoff").text(roundoff);

            var model = new Object();
            
            model.VivraniID = id;
           
            model.Amount = amount;
            model.roundOff = roundoff;
            model.vivraninumber = cashvivrani;
            

            $.ajax({

                url: '/WayBill/SaveData',

                data: JSON.stringify(model),

                type: 'POST',

                contentType: 'application/json; charset=utf-8',

                success: function (result) {
                    isSuccess = result;

                },
                error: function (result) {
                    isSuccess = result;
                }

            }).done(function () {
                debugger;
                if (isSuccess == "1") {           // Successfully saved
                    tr.find('.edit, .display').toggle();
                    alert("Successfully Saved");
                }
                else {                      // Data Error
                    alert("Error. Please, check the data");
                }
            });

        });


        $('.delete-btn').on("click", function () {
            var tr = $(this).parents('tr:first');
            var model = new Object();

            var vivranid = tr.find("#inserialID").val();
           
            debugger;
            

            $.ajax({

                url: '/WayBill/DeleteData/',

                data: JSON.stringify( { 'vivranid': vivranid }),

                type: 'POST',

                contentType: 'application/json; charset=utf-8',

                success: function (result) {
                    isSuccess = result;

                },
                error: function (result) {
                    isSuccess = result;
                }

            }).done(function () {
                if (isSuccess == "1") {           // Successfully Deleted
                    alert("Successfully Deleted");
                    location.reload();      // refresh the page
                }
                else {                      // Data Error
                    alert("Error. Please, check the data");
                }

            });


        });
    });
    (function ($) {
        $.widget("custom.combobox", {
            _create: function () {
                this.wrapper = $("<span>")
                  .addClass("custom-combobox")
                  .insertAfter(this.element);

                this.element.hide();
                this._createAutocomplete();
                this._createShowAllButton();
            },

            _createAutocomplete: function () {
                var selected = this.element.children(":selected"),
                  value = selected.val() ? selected.text() : "";

                this.input = $("<input>")
                  .appendTo(this.wrapper)
                  .val(value)
                  .attr("title", "")
                  .addClass(" edit custom-combobox-input ui-widget ui-widget-content ui-state-default ui-corner-left")
                  .autocomplete({
                      delay: 0,
                      minLength: 0,
                      source: $.proxy(this, "_source")
                  })
                  .tooltip({
                      tooltipClass: "ui-state-highlight"
                  });

                this._on(this.input, {
                    autocompleteselect: function (event, ui) {
                        ui.item.option.selected = true;
                        this._trigger("select", event, {
                            item: ui.item.option
                        });
                    },

                    autocompletechange: "_removeIfInvalid"
                });
            },

            _createShowAllButton: function () {
                var input = this.input,
                  wasOpen = false;

                $("<a>")
                  .attr("tabIndex", -1)
                  .tooltip()

                  .appendTo(this.wrapper)
                  .button({
                      icons: {
                          primary: "ui-icon-triangle-1-s"
                      },
                      text: false
                  })
                  .removeClass("ui-corner-all")
                  .addClass("custom-combobox-toggle ui-corner-right")
                  .mousedown(function () {
                      wasOpen = input.autocomplete("widget").is(":visible");
                  })
                  .click(function () {
                      input.focus();

                      // Close if already visible
                      if (wasOpen) {
                          return;
                      }

                      // Pass empty string as value to search for, displaying all results
                      input.autocomplete("search", "");
                  });
            },

            _source: function (request, response) {
                var matcher = new RegExp($.ui.autocomplete.escapeRegex(request.term), "i");
                response(this.element.children("option").map(function () {
                    var text = $(this).text();
                    if (this.value && (!request.term || matcher.test(text)))
                        return {
                            label: text,
                            value: text,
                            option: this
                        };
                }));
            },

            _removeIfInvalid: function (event, ui) {

                // Selected an item, nothing to do
                if (ui.item) {
                    return;
                }

                // Search for a match (case-insensitive)
                var value = this.input.val(),
                  valueLowerCase = value.toLowerCase(),
                  valid = false;
                this.element.children("option").each(function () {
                    if ($(this).text().toLowerCase() === valueLowerCase) {
                        this.selected = valid = true;
                        return false;
                    }
                });

                // Found a match, nothing to do
                if (valid) {
                    return;
                }

                // Remove invalid value
                this.input
                  .val("")
                this.element.val("");
                this._delay(function () {
                    this.input.tooltip("close").attr("title", "");
                }, 2500);
                this.input.data("ui-autocomplete").term = "";
            },

            _destroy: function () {
                this.wrapper.remove();
                this.element.show();
            }
        });
    })(jQuery);
    $(function () {
       
        $("#ddlBusNumber").combobox();
        $("#ddlBusNumber").combobox();
        $("#ddlBusNumber").combobox();
        $("#ddlBusNumber").combobox();
        $("#toggle").click(function () {
            $("#ddlBusNumber").toggle();
            $("#ddlBusNumber").combobox();
            $("#ddlBusNumber").combobox();
            $("#ddlBusNumber").combobox();

        });




    });
</script>