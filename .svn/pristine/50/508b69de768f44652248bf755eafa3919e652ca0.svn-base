using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Data;
using System.Data.Sql;
using Gmou.DomainModelEntities;
using System.Data.SqlClient;

namespace Gmou.DataRepository
{
    public class WayBillRepository
    {
        public static vivraniDomainModel GetVivraniSerial(Vivirani model)
        {
            vivraniDomainModel vivranidomainmodel = new vivraniDomainModel();
            int serialID;
            using (var conn = new SqlConnection(System.Configuration.ConfigurationManager.ConnectionStrings["ConnectionString"].ConnectionString))
            {
                using (var cmd = new SqlCommand("sp_CashVivraniMaster", conn))
                {
                    cmd.CommandType = CommandType.StoredProcedure;
                    cmd.Parameters.AddWithValue("emp_id", model.UserID);
                    cmd.Parameters.AddWithValue("emp_department", model.DepartmentId);
                    cmd.Parameters.AddWithValue("Issubmited", model.IsSubmitted);
                    conn.Open();
                    vivranidomainmodel.VivraniSerialNumber =(int) cmd.ExecuteScalar();
                    conn.Close();
                }
            }
            using (var conn = new SqlConnection(System.Configuration.ConfigurationManager.ConnectionStrings["ConnectionString"].ConnectionString))
            {
                using (var cmd = new SqlCommand("sp_GetAllBusOwnersName", conn))
                {
                    cmd.CommandType = CommandType.StoredProcedure;
                   
                    conn.Open();
                   SqlDataReader rd =cmd.ExecuteReader();
                   List<BusOwner> lstownerdata = new List<BusOwner>();
                   while (rd.Read())
                   {


                       var ownerdata = new BusOwner { BusOwnerID = Convert.ToInt32(rd["bus_owner_ID"]), BusOwnerName = rd["bus_owner_name"].ToString() };
                       lstownerdata.Add(ownerdata);
                   }
                   vivranidomainmodel.BusOwner = lstownerdata;
                    conn.Close();
                }
            }
            using (var conn = new SqlConnection(System.Configuration.ConfigurationManager.ConnectionStrings["ConnectionString"].ConnectionString))
            {
                using (var cmd = new SqlCommand("sp_GetAallBusList", conn))
                {
                    cmd.CommandType = CommandType.StoredProcedure;

                    conn.Open();
                    SqlDataReader rd = cmd.ExecuteReader();
                    List<Bus> lstbus = new List<Bus>();
                    while (rd.Read())
                    {

                        var bus = new Bus { BusID = Convert.ToInt32(rd["busid"]), BusNumber = rd["bus_number"].ToString() };
                        lstbus.Add(bus);
                    }
                    vivranidomainmodel.bus = lstbus;
                    conn.Close();
                }
            }
            return vivranidomainmodel;
        }
        public static IEnumerable<VivraniDetailsModel> SaveVivraniDetails(VivraniDetails model)
        {
            int vivraniID;
            decimal totalamount = model.TotalAmount;
            using (var conn = new SqlConnection(System.Configuration.ConfigurationManager.ConnectionStrings["ConnectionString"].ConnectionString))
            {
                using (var cmd = new SqlCommand("sp_SaveVivraniDetails", conn))
                {
	
                    cmd.CommandType = CommandType.StoredProcedure;
                    cmd.Parameters.AddWithValue("vivraniSerialNumber", model.vivraniSerialNumber);
                    cmd.Parameters.AddWithValue("vechilenumber", Convert.ToInt32(model.VechileNumber));
                    cmd.Parameters.AddWithValue("ownername", Convert.ToInt32( model.OwnerName));
                     cmd.Parameters.AddWithValue("servicename", Convert.ToInt32( model.ServiceName));
                    cmd.Parameters.AddWithValue("waybillseial", model.WayBillSerialNumber);
                    cmd.Parameters.AddWithValue("waybillno", model.WayBillNumber);
                     cmd.Parameters.AddWithValue("ticketno", model.TicketNumber);
                    cmd.Parameters.AddWithValue("ticketserial", model.TicketSerailNumber);
                    cmd.Parameters.AddWithValue("jfrom", model.ServiceFrom);
                cmd.Parameters.AddWithValue("jto", model.ServiceTo);
                cmd.Parameters.AddWithValue("amount", Convert.ToDecimal( model.Amount));
                    conn.Open();
                    try
                    {
                        vivraniID = (int)cmd.ExecuteScalar();
                    }
                    catch (Exception ex)
                    {
                        
                        throw;
                    }
                   
                    conn.Close();
                }
            }
            return GetUpdatedData(vivraniID, totalamount);
        }
        private static IEnumerable<VivraniDetailsModel> GetUpdatedData(int id, decimal totalamount)
        {
             int vivraniID;
            
             using (var conn = new SqlConnection(System.Configuration.ConfigurationManager.ConnectionStrings["ConnectionString"].ConnectionString))
             {
                 using (var cmd = new SqlCommand("sp_GetUpdatedVivrani", conn))
                 {
                     cmd.CommandType = System.Data.CommandType.StoredProcedure;
                     cmd.Parameters.AddWithValue("entryID", id);
                     SqlDataReader dr;
                     conn.Open();
                     try
                     {
                          dr = cmd.ExecuteReader();
                     }
                     catch (Exception ex)
                     {

                         throw;
                     }
                    
                     while (dr.Read())
                     {
                       
                         yield return new VivraniDetailsModel(totalamount,
                              (Convert.ToInt32(dr["vivraniSerialNumber"])),
                            dr["vechilenumber"].ToString(),

                            (dr["ownername"].ToString()),
                            dr["servicename"].ToString(),
                             (Convert.ToInt32(dr["waybillseial"])),
                         (Convert.ToInt32(dr["waybillno"])),
                          (Convert.ToInt32(dr["ticketno"])),
                         (Convert.ToInt32(dr["ticketserial"])),
                            (dr["jfrom"].ToString()),
                            dr["jto"].ToString(),

                            Convert.ToDecimal( (dr["amount"]))
                        );
                     }
                     conn.Close();
                 }
             }
	

        }
    }
}
